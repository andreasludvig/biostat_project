{
  "hash": "99f1e3ec9228a404b88245289bd619c0",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Biostat 2\"\nauthor:\n  - name: Andreas Svendsen\n    orcid: 0000-0001-8050-6447\n    corresponding: true\n    email: alosvendsen@health.sdu.dk\n    affiliations:\n      - SDU\nabstract: |\n  Testing if the GLM with a poisson distribution is suitable for differential gene expresseion analysis.\nplain-language-summary: |\n  Not needed...\ndate: last-modified\nbibliography: references.bib\nnumber-sections: true\n---\n\n::: {.cell .hidden}\n\n```{.r .cell-code .hidden}\nlibrary(kableExtra)\nlibrary(limma)\nlibrary(edgeR)\nlibrary(data.table)\nlibrary(ggplot2)\n```\n:::\n\n\n## Introduction\n\nInflammation is a complex biological response that is pivotal in various pathological conditions. These range from systemic inflammatory diseases, such as rheumatoid arthritis and sepsis, to lower-grade chronic inflammatory states such as type 2 diabetes mellitus. Given the prevalence of systemic inflammation, understanding its interaction with drug metabolism is of substantial clinical relevance.\n\nDrug-metabolizing enzymes and transporters (DMETs), predominantly found in hepatocytes within the liver, are central to the biotransformation of a wide variety of compounds. Inflammation has been shown to modulate the activity of these DMETs, a phenomenon that could potentially affect the pharmacokinetics of numerous medications. For individuals with altered inflammatory status---whether due to a chronic condition like diabetes or an acute event like sepsis---this modulation can have significant implications. It may necessitate adjustments in drug dosages to avoid adverse effects or therapeutic failure.\n\nPrevious research has provided valuable insights into the effects of inflammation on DMETs, but a clear correlation between in vitro studies and clinical observations remains elusive. For instance *Dunvald et al.* @dunvald conducted a comprehensive review of the clinical and in vitro evidence on inflammation-mediated modulation of DMETs and the impact on drug metabolism in humans. They found that in vitro studies in primary human hepatocytes revealed strong evidence of downregulation of key cytochrome P450 (CYP) enzymes by inflammatory cytokines such as IL-6 and IL-1β. However, these studies often employed supraphysiological cytokine doses, which may not accurately represent the inflammatory conditions observed in patients.\n\nLevels of IL-6 and IL-1B in healthy individuals are generally low, with reports ranging from undetectable to **XXX** in adults [@kim2011; @kleiner2013]. In contrast, cytokine levels may be considerably elevated with IL-6 levels of ZZZ among patients with rheumatoid arthritis (ref) to YYY for patients with acute inflammation caused by sepsis (ref). These variations in cytokine levels, which span a wide range in different pathological states, highlight the complex and dynamic nature of inflammation and underscore the need for research that considers this variability when investigating the effects of inflammation on drug-metabolizing enzymes.\n\nRecently, 3D primary human hepatocytes (PHH) have challenged 2D PHH as a more physiologically relevant culture method of PHH. 3D culture leads to more stable cell cultures that retain their hepatic phenotype for extended periods of time. Consequently, this 3D PHH have been shown to predict CYP induction and hepatotoxicity more accurately than 2D PHH (REFS). Historically, 2D PHH have been utilized to study the effect of inflammation @ingelman-sundberg ...Another claim for the lack of correlation discussed in the review by AC et al. is that there might be methodolocial limitiation to the widespread use of 2D models of PHHs.\n\nWe aimed to utilize 3D primary human hepatocytes (REF, characterization article) to study the impact of physiologically relevant concentrations of cytokines on CYP expression and activity. This may help further our understanding of the impact of inflammation on clinical drug metabolism among patients with inflammation. This, in turn, may inform more precise and adaptive prescribing strategies for patients in various inflammatory states.\n\nAs part of this project we wish to do a whole mRNA sequencing and differential gene expression analysis, too see which genes are up or down regulated, and subsequently do pathway analysis and gene set enrichment analysis. The first part of this sequencing analysis is the main concern of this assignment.\n\n## Materials and Methods\n\nThe data set consists of count data obtained from mRNA sequencing of primary human hepatocytes from a single donor. Of interest for this project there are five groups in total: one control and four treated with either 10 ng/ml or 0.1 ng/ml of IL-6 or IL-1B:\n\n• Vehicle control (no cytokine exposure)\n\n• IL-6 at 10 ng/ml\n\n• IL-6 at 0.1 ng/ml\n\n• IL-1B at 10 ng/ml\n\n• IL-1B at 0.1 ng/ml\n\nThere are further samples in the data which are not directly related to this project.\n\nEach treatment and control group consists of duplicate samples, each sample originates from hepatocytes from 24 wells, with each well containing 1500 hepatocytes. Originating from one donor, these samples are pseudo-biological replicates, capturing intra-donor response variability and experimental nuances, such as differences in seeding, treatment application or other procedural variables, rather than genetic diversity/inter-individual biological variation. Although not optimal, this is exploratory data and while limiting the ability to generalize findings across a population, it allows for a nuanced understanding of cytokine effects at the individual level.\n\nFollowing cytokine treatment, total RNA was extracted from the hepatocytes and subjected to mRNA isolation to enrich for the coding transcripts. The mRNA was then sequenced using the Illumina NovaSeq 6000 system. Sequencing data were processed to generate .fastq files, and aligned to a reference human transcriptome. Quality controls were implemented to ensure data integrity.\n\nThe primary output is a dataset of count data, specifically gene counts, which quantify the number of sequencing reads aligned to each gene, indicating gene expression levels. Accompanying this dataset are gene annotation and sample information files, which provide the foundation for the forthcoming differential gene expression analysis.\n\n**Purpose of analysis**\n\nThe overarching aim of this analysis is to discern the differential gene expression profiles in primary human hepatocytes under the influence of inflammatory cytokines, specifically IL-6 and IL-1B. By comparing gene expression levels between cytokine-treated and control samples, we seek to:\n\n1.  Identify the genes that are significantly upregulated or downregulated in response to each cytokine, with an emphasis on drug metabolizing enzymes. This will allow us to compare mRNA sequencing data with qPCR data for these enzymes, providing a validation layer to the findings.\n\n2.  Use the output of the differential gene expression analysis to, later on, conduct pathway analysis and gene set enrichment analysis to better understand the broader biological processes that are impacted by cytokine exposure.\n\n3.  Determine whether IL-6 and IL-1B share common pathways in altering gene expression or if they act on distinct sets of genes.This might shed light on the intricacies of inflammatory responses at the molecular level.\n\n4.  The response variable in this study is the expression level of each after treatment with cytokines relative to the expression of the controls. The hypothesis is that exposure to IL-6 and IL-1B will result in a downregulation of drug metabolizing enzymes, reflecting the inhibitory nature of inflammation on hepatic drug metabolism.\n\n## Statistical methods and results\n\nAll data and statistical analysis is available at: <https://github.com/andreasludvig/biostat_project>\n\nAs the main part of this project i will use a generalized linear model with a poisson distribution and log link to investigate if any CYP enzymes are statistically differentiated expressed in the genes that are treated with cytokines as compared to vehicle control.\n\n### Exploratory data analysis.\n\n#### Data content\n\nThe matrix of gene counts, gene annotation file and sample information file are loaded, tidied and saved as an DGE_object (basically just a list). Code in `notebooks/00-load_data.qmd`. First lines and structure of each element of this DGE list:\n\n\n::: {.cell .hidden}\n\n```{.r .cell-code .hidden}\ndge_data <- readRDS(\"notebooks/outputs/data_processed/dge_data.rds\")\n```\n:::\n\n\n**Count matrix**: Each column is a sample and each row is a gene with the count for each sample\n\n\n::: {.cell}\n\n```{.r .cell-code .hidden}\n# View the counts matrix\nhead(dge_data$counts)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n    S1   S2   S5   S6   S7   S8  S11  S12  S13  S14  S15  S16 S17  S18  S19\n1 1327 1322 1105 2569 2696 1513 1597 1107 1681 1751 1709 1447 944 1324 3266\n2    0    0    0    2    0    2    0    0    1    0    0    0   1    0    8\n3  545  607  478 1041  694  480  644  530  620  583  866  933 569  843 1509\n4  414  482  351  778  786  529  443  429  689  684  544  544 190  411  820\n5   73   49   42  117  116   83   73   53   79  118   84   93  34   65  108\n6  163  190  123  295  188  131  152  126  258  200  154  183  61   98  403\n   S20\n1 1193\n2    1\n3  587\n4  293\n5   55\n6   90\n```\n\n\n:::\n:::\n\n\n**Sample info:** A dataframe with information on samples\n\n\n::: {.cell}\n\n```{.r .cell-code .hidden}\nhead(dge_data$samples)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n   group lib.size norm.factors       treatment sample_name replicate\nS1     1 27936538            1 Vehicle_control    AS0018_1         1\nS2     1 30783447            1 Vehicle_control    AS0018_2         2\nS5     2 23849669            1   01_ng_ml_IL_6    AS0018_5         1\nS6     2 50753398            1   01_ng_ml_IL_6    AS0018_6         2\nS7     3 43975254            1   10_ng_ml_IL_6    AS0018_7         1\nS8     3 28500067            1   10_ng_ml_IL_6    AS0018_8         2\n   group_color\nS1     #000000\nS2     #000000\nS5     #A6CEE3\nS6     #A6CEE3\nS7     #1F78B4\nS8     #1F78B4\n```\n\n\n:::\n:::\n\n\n**Gene annotation:** File of gene names and symbols, matching the rows in the count matrix\n\n\n::: {.cell}\n\n```{.r .cell-code .hidden}\nhead(dge_data$genes)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n      ENSEMBLE_ID   symbol                id_symbol\n1 ENSG00000000003   TSPAN6   ENSG00000000003;TSPAN6\n2 ENSG00000000005     TNMD     ENSG00000000005;TNMD\n3 ENSG00000000419     DPM1     ENSG00000000419;DPM1\n4 ENSG00000000457    SCYL3    ENSG00000000457;SCYL3\n5 ENSG00000000460 C1orf112 ENSG00000000460;C1orf112\n6 ENSG00000000938      FGR      ENSG00000000938;FGR\n```\n\n\n:::\n:::\n\n\n#### Basic summary statistics and visualization\n\n\n{{< embed notebooks/01-exploratory_data_analysis.qmd#tbl-raw-sum-stats >}}\n\n\n\nFrom the raw summary statistics in @tbl-raw-sum-stats we note that the data is heavily **zero-inflated**, as a significant portion of the counts are zero across all samples. This is not uncommon in RNA-seq data. Probably also very likely since we have just one cell type and are aligning with the entire human transcriptome. The maximum counts are substantially higher than the 75th percentile, indicating the presence of **outliers or highly expressed genes**. The data is heavily **skewed**, with mean values much higher than the median (50th percentile), which is zero in most cases.\n\n\n{{< embed notebooks/01-exploratory_data_analysis.qmd#fig-boxplot-counts >}}\n\n\n\nThis can also be visualized in a boxplot in @fig-boxplot-counts\n\n### Filter and normalize the data\n\nCode for filtering and normalization is in the `notebooks/02-filter_normalize.qmd` script.\n\nWe are filtering genes with less than one count per million (CPM). After filtering low count genes we have filtered out 49098 genes and are left with 13612 genes, and after removal of duplicates we are left with 13610 genes.\n\n### Unsupervised data visualization\n\n### Differential gene expression analysis\n\nFor this project, we will fit a Generalized Linear Model (GLM) using the Poisson distribution with a log link function. Our primary interest lies in comparing treated vs. untreated samples, regardless of the concentration. This approach is chosen over a more nuanced model incorporating concentrations as a continuous variable due to the limited variation in concentrations (only two per treatment), which might not provide robust estimations in a continuous model.\n\nThe model we will use is:\n\n$log(\\lambda) = \\alpha + \\beta_1*x_1$ ,\n\nwhere $\\lambda$ represents the expected count, $\\alpha$ is the baseline rate of counts for the untreated group, and $\\beta_1$ is the rate ratio for the treatment effect. In this model, $x_1$ is a binary indicator for treatment, with 0 indicating control (untreated) and 1 indicating treated samples.\n\nThis formual also translates to log(rate) = baselinerate/unexposed_rate \\* exposure_rate_ratio\n\nPoisson regression is appropriate for modeling count data where the dependent variable is assumed to follow a Poisson distribution. This model assumes that the logarithm of the expected count is linearly related to the independent variables. A critical assumption of the Poisson model is that the mean equals the variance, a condition often violated in RNA-seq data due to overdispersion. Therefore, this analysis serves as an initial step, and more sophisticated models may be required for a complete understanding of the dataset.\n\n\n::: {.cell}\n\n```{.r .cell-code .hidden}\ndge_data_norm <- readRDS(\"notebooks/outputs/data_processed/dge_data_norm.rds\")\n\n\nkeep_indices <- grep(\"^CYP\", dge_data_norm$genes$symbol)\n\ncyp_data <- dge_data_norm[keep_indices, keep.lib.sizes = FALSE]\n\n\n# cyp_data is the subset of genes we want to investigate\ncounts <- cyp_data$counts\ngenes <- rownames(counts)\nsamples <- colnames(counts)\n\n# Creating a long-format data frame\ndata_long <- data.frame(gene = rep(genes, each = length(samples)),\n                        sample = rep(samples, times = length(genes)),\n                        count = as.vector(counts),\n                        treatment = cyp_data$samples$treatment)\n\n# Select the first gene\nfirst_gene <- unique(data_long$gene)[1]\nfirst_gene_data <- subset(data_long, gene == first_gene)\n\n# For each cytokine treatment, create a binary variable that is 1 for that specific cytokine treatment and 0 for the vehicle control.\n\nfirst_gene_data$treatment_IL_6_01_ng_ml <- as.numeric(first_gene_data$treatment == \"01_ng_ml_IL_6\")\nfirst_gene_data$treatment_IL_6_10_ng_ml <- as.numeric(first_gene_data$treatment == \"10_ng_ml_IL_6\")\nfirst_gene_data$treatment_IL_1B_01_ng_ml <- as.numeric(first_gene_data$treatment == \"01_ng_ml_IL_1B\")\nfirst_gene_data$treatment_IL_1B_10_ng_ml <- as.numeric(first_gene_data$treatment == \"10_ng_ml_IL_1B\")\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code .hidden}\n# Poisson models for each cytokine treatment\npoisson_model_IL_6_01_ng_ml <- glm(count ~ treatment_IL_6_01_ng_ml, family = poisson(), data = first_gene_data)\npoisson_model_IL_6_10_ng_ml <- glm(count ~ treatment_IL_6_10_ng_ml, family = poisson(), data = first_gene_data)\npoisson_model_IL_1B_01_ng_ml <- glm(count ~ treatment_IL_1B_01_ng_ml, family = poisson(), data = first_gene_data)\npoisson_model_IL_1B_10_ng_ml <- glm(count ~ treatment_IL_1B_10_ng_ml, family = poisson(), data = first_gene_data)\n\nsummary(poisson_model_IL_6_01_ng_ml)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\nCall:\nglm(formula = count ~ treatment_IL_6_01_ng_ml, family = poisson(), \n    data = first_gene_data)\n\nCoefficients:\n                         Estimate Std. Error z value Pr(>|z|)    \n(Intercept)             10.669258   0.001289    8279   <2e-16 ***\ntreatment_IL_6_01_ng_ml  0.767586   0.002656     289   <2e-16 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n(Dispersion parameter for poisson family taken to be 1)\n\n    Null deviance: 1016536  on 15  degrees of freedom\nResidual deviance:  944330  on 14  degrees of freedom\nAIC: 944524\n\nNumber of Fisher Scoring iterations: 6\n```\n\n\n:::\n\n```{.r .cell-code .hidden}\nsummary(poisson_model_IL_6_10_ng_ml)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\nCall:\nglm(formula = count ~ treatment_IL_6_10_ng_ml, family = poisson(), \n    data = first_gene_data)\n\nCoefficients:\n                         Estimate Std. Error z value Pr(>|z|)    \n(Intercept)             10.835898   0.001186 9139.33   <2e-16 ***\ntreatment_IL_6_10_ng_ml -0.288519   0.003813  -75.67   <2e-16 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n(Dispersion parameter for poisson family taken to be 1)\n\n    Null deviance: 1016536  on 15  degrees of freedom\nResidual deviance: 1010347  on 14  degrees of freedom\nAIC: 1010541\n\nNumber of Fisher Scoring iterations: 6\n```\n\n\n:::\n\n```{.r .cell-code .hidden}\nsummary(poisson_model_IL_1B_01_ng_ml)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\nCall:\nglm(formula = count ~ treatment_IL_1B_01_ng_ml, family = poisson(), \n    data = first_gene_data)\n\nCoefficients:\n                          Estimate Std. Error z value Pr(>|z|)    \n(Intercept)              10.878530   0.001161  9373.5   <2e-16 ***\ntreatment_IL_1B_01_ng_ml -0.853444   0.004846  -176.1   <2e-16 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n(Dispersion parameter for poisson family taken to be 1)\n\n    Null deviance: 1016536  on 15  degrees of freedom\nResidual deviance:  976359  on 14  degrees of freedom\nAIC: 976553\n\nNumber of Fisher Scoring iterations: 5\n```\n\n\n:::\n\n```{.r .cell-code .hidden}\nsummary(poisson_model_IL_1B_10_ng_ml)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\nCall:\nglm(formula = count ~ treatment_IL_1B_10_ng_ml, family = poisson(), \n    data = first_gene_data)\n\nCoefficients:\n                          Estimate Std. Error z value Pr(>|z|)    \n(Intercept)              10.883578   0.001158  9401.5   <2e-16 ***\ntreatment_IL_1B_10_ng_ml -0.945326   0.005048  -187.3   <2e-16 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n(Dispersion parameter for poisson family taken to be 1)\n\n    Null deviance: 1016536  on 15  degrees of freedom\nResidual deviance:  969605  on 14  degrees of freedom\nAIC: 969800\n\nNumber of Fisher Scoring iterations: 5\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code .hidden}\n# Creating a summary data frame\nsummary_data <- \n  data.frame(\n    Treatment = \n      c(\"IL-6 01 ng/ml\", \"IL-6 10 ng/ml\", \"IL-1B 01 ng/ml\", \"IL-1B 10 ng/ml\"\n        ),\n    Log_Expected_Count_Intercept = \n      c(coef(poisson_model_IL_6_01_ng_ml)[\"(Intercept)\"],\n        coef(poisson_model_IL_6_10_ng_ml)[\"(Intercept)\"],\n        coef(poisson_model_IL_1B_01_ng_ml)[\"(Intercept)\"],\n        coef(poisson_model_IL_1B_10_ng_ml)[\"(Intercept)\"]\n        ),\n    Coefficient = \n      c(coef(poisson_model_IL_6_01_ng_ml)[\"treatment_IL_6_01_ng_ml\"],\n        coef(poisson_model_IL_6_10_ng_ml)[\"treatment_IL_6_10_ng_ml\"],\n        coef(poisson_model_IL_1B_01_ng_ml)[\"treatment_IL_1B_01_ng_ml\"],\n        coef(poisson_model_IL_1B_10_ng_ml)[\"treatment_IL_1B_10_ng_ml\"]),\n    P_Value = c(summary(poisson_model_IL_6_01_ng_ml)$coefficients[\"treatment_IL_6_01_ng_ml\", \"Pr(>|z|)\"],\n                summary(poisson_model_IL_6_10_ng_ml)$coefficients[\"treatment_IL_6_10_ng_ml\", \"Pr(>|z|)\"],\n                summary(poisson_model_IL_1B_01_ng_ml)$coefficients[\"treatment_IL_1B_01_ng_ml\", \"Pr(>|z|)\"],\n                summary(poisson_model_IL_1B_10_ng_ml)$coefficients[\"treatment_IL_1B_10_ng_ml\", \"Pr(>|z|)\"]\n                )\n)\n\n# Calculating actual expected counts and fold changes\nsummary_data$Expected_Count = exp(summary_data$Log_Expected_Count_Intercept)\nsummary_data$Fold_Change = exp(summary_data$Coefficient)\n\nrow.names(summary_data) <- NULL\n\n# Print the summary table\nprint(summary_data)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n       Treatment Log_Expected_Count_Intercept Coefficient P_Value\n1  IL-6 01 ng/ml                     10.66926   0.7675856       0\n2  IL-6 10 ng/ml                     10.83590  -0.2885188       0\n3 IL-1B 01 ng/ml                     10.87853  -0.8534440       0\n4 IL-1B 10 ng/ml                     10.88358  -0.9453265       0\n  Expected_Count Fold_Change\n1       43013.00   2.1545579\n2       50812.50   0.7493727\n3       53025.57   0.4259454\n4       53293.93   0.3885527\n```\n\n\n:::\n:::\n\n\n\nTBD. Finish the unsupervised visualisations. Interpret the results here. Calculate overdispersion. visualise models? Think about negative binomial model. \n\n## References {.unnumbered}\n\n::: {#refs}\n:::\n",
    "supporting": [
      "index_files\\figure-html"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}