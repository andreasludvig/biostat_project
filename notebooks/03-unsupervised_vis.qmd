---
title: "Unsupervised data visualisation"
author: Andreas Svendsen
---

# MDS plot ----------------------------------------------------------------

# MDS (multi-dimensionel scaling) plot 
# Unsupervised data visualization

# Change col names of the expression matrix from S1, S2 etc. to AS0018_1, AS0018_2 etc.
colnames(dge_data$counts) <- dge_data$samples[, "treatment"]

# Generate the MDS plot using normalized data.
# Using top 500 genes with the highest variability
# Color points based on the 'group_color' column from the samples data.
# Use point character (pch) 16, and size (cex) of 2.5.
plotMDS(
  dge_data,
  top = 500,
  col = dge_data$samples$group_color,
  pch = 16,
  cex = 2.5,
)

# Add a legend to the plot at position (1.5, -1.3)
# Use unique treatments as the legend text and unique group_colors for the point colors.
# Set border type (bty) to "n" to remove the border.
legend(x = 1.5, y = 2.5, legend = unique(dge_data$samples$treatment), col = unique(dge_data$samples$group_color), pch = 16, bty = "n")

# Save plot as an object.
mds_plot <- recordPlot()

# Choosing number of top variable genes --------------------------------------------
# Top 500 genes seems to work well for the plot. However we could try:
# 1. Plotting the distribution of gene variances to get a sense of how many
# genes are highly variable
# 2. Perform sensitivity analysis, running the MDS plot for different numbers
# of top genes to see how the plot changes.

# 1. Plotting Distribution of Gene Variances
gene_variances <- apply(dge_data$counts, MARGIN = 1, var) # calculate rowwise variance, ie, variance for each gene. 
head(gene_variances)
summary(gene_variances)


# A boxplot reveals an extreme outlier
boxplot(gene_variances, main = "Boxplot of Gene Variances")
boxplot_gene_variances <- recordPlot()

# A hist of gene variances can aid in choosing the number of top variable genes
hist(log1p(gene_variances), main = "Log-transformed Distribution of Gene Variances", xlab = "Log(Variance + 1)", ylab = "Frequency", breaks = 80)
histogram_gene_variances <- recordPlot()

# As seen in the histogram a log(variance+1) of at least ~15-16 could be
# considered high variance genes. This would be the top:
log_thresholds <- c(15, 16, 17)
vapply(
  X = log_thresholds,
  FUN = function(log_threshold) sum(log1p(gene_variances) > log_threshold),
  FUN.VALUE = numeric(1)
)
# 980 529 293 genes.Top 500 seems like a reasonable choice.
# Also since trying different values for the top genes does not seem to change
# the mds plot from 400-1000 top var genes:
# 2. Sensitivity Analysis: MDS plot for Different Numbers of Top Variable Genes
# List of different numbers of top variable genes to test

# top_genes_list <- c(
#   100, 200, 300, 400, 500, 600, 700, 800,
#   1000, 1500, 2000, 4000, 8000
# )
# 
# mds_plot_list <- list()
# 
# # Loop over the list and generate MDS plots
# for (top_genes in top_genes_list) {
#   plotMDS(dge_data,
#           top = top_genes,
#           main = paste("MDS Plot for Top", top_genes, "Variable Genes"),
#           col = dge_data$samples$group_color,
#           pch = 16
#   )
#   legend("topright", legend = unique(dge_data$samples$treatment), col = unique(dge_data$samples$group_color), pch = 16, bty = "n")
#   
#   # Capture the plot as an object
#   mds_plot_list[[top_genes]] <- recordPlot()
#   
# }